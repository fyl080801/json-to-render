import{o as n,c as s,a}from"./app.b15155e8.js";const p='{"title":"数据源","description":"","frontmatter":{},"headers":[{"level":2,"title":"概念","slug":"概念"},{"level":2,"title":"数据源定义","slug":"数据源定义"},{"level":2,"title":"自定义数据源","slug":"自定义数据源"}],"relativePath":"guide/datasource.md","lastUpdated":1646557776963}',t={},e=a('<h1 id="数据源"><a class="header-anchor" href="#数据源" aria-hidden="true">#</a> 数据源</h1><h2 id="概念"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><p>数据源的意义就是数据的来源，是属性表达式里能够使用的数据，<code>json2render</code></p><div class="language-vue line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>j-render</span>\n    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>model<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:fields</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fields<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:datasource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>datasource<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>j-render</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> JRender <span class="token keyword">from</span> <span class="token string">&#39;json2render/vue-full&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span> JRender <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      datasource<span class="token operator">:</span> <span class="token punctuation">{</span>\n        listdata<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;fetch&#39;</span><span class="token punctuation">,</span> url<span class="token operator">:</span> <span class="token string">&#39;/data.json&#39;</span><span class="token punctuation">,</span> auto<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      model<span class="token operator">:</span> <span class="token punctuation">{</span>\n        text<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      fields<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          component<span class="token operator">:</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span>\n          <span class="token comment">// 属性值是从 model 的 text 里获取，值发生变化显示也发生变化</span>\n          text<span class="token operator">:</span> <span class="token punctuation">{</span>\n            $type<span class="token operator">:</span> <span class="token string">&#39;computed&#39;</span><span class="token punctuation">,</span>\n            $result<span class="token operator">:</span> <span class="token string">&#39;model.text&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          component<span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>\n          props<span class="token operator">:</span> <span class="token punctuation">{</span>\n            placeholder<span class="token operator">:</span> <span class="token string">&#39;请输入&#39;</span><span class="token punctuation">,</span>\n            <span class="token comment">// 属性值是从 model 的 text 里获取，值发生变化显示也发生变化</span>\n            value<span class="token operator">:</span> <span class="token string">&#39;$:model.text&#39;</span><span class="token punctuation">,</span>\n            <span class="token comment">// 事件里将第一个参数里的属性值更新到 model 的 text 属性里</span>\n            onInput<span class="token operator">:</span> <span class="token string">&#39;@model.text:arguments[0].target.value&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          component<span class="token operator">:</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span>\n          <span class="token comment">// 属性值是数据源 listdata 的 data 属性转换成字符串</span>\n          text<span class="token operator">:</span> <span class="token string">&#39;$:JSON.stringify(listdata.data)&#39;</span><span class="token punctuation">,</span>\n          props<span class="token operator">:</span> <span class="token punctuation">{</span> style<span class="token operator">:</span> <span class="token string">&#39;color: red&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h2 id="数据源定义"><a class="header-anchor" href="#数据源定义" aria-hidden="true">#</a> 数据源定义</h2><p><code>json2render</code> 支持 <code>model</code> <code>arguments</code> <code>scope</code> 三种数据来源</p><h4 id="model"><a class="header-anchor" href="#model" aria-hidden="true">#</a> model</h4><p>是组件 <code>modelValue</code> 属性传递过来的值</p><h4 id="arguments"><a class="header-anchor" href="#arguments" aria-hidden="true">#</a> arguments</h4><p>如果属性是一个事件，则 <code>arguments</code> 代表事件传过来的参数集合</p><h4 id="scope"><a class="header-anchor" href="#scope" aria-hidden="true">#</a> scope</h4><p>如果组件是由数组数据渲染出来的或者父级组件有值传递过来，<code>scope</code> 就作为当前数据项的引用</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>类似 vue <code>scope-slot</code> 的作用</p></div><h2 id="自定义数据源"><a class="header-anchor" href="#自定义数据源" aria-hidden="true">#</a> 自定义数据源</h2><p>除了固定数据来源以外，可使用的数据也包括通过插件定义的或自定义的数据来源，具体参考<a href="./setup.html">高级用法</a></p>',15);t.render=function(a,p,t,o,c,l){return n(),s("div",null,[e])};export default t;export{p as __pageData};
